# Problem 1 - Multiple of 3 and 5

# If we list all the natural numbers below 10 that are multiples of 3 or 5, we 
# get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

def multiple_of_three_and_five(number)
  multiples = []
  
  (3...number).each do |n|
    if n % 3 == 0 || n % 5 == 0
      multiples << n
    end
  end

  multiples.inject(:+)
end

# Problem 2 - Even Fibonacci numbers

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.

def even_fibonacci
  start = [1, 2]

  while start[-1] < 4e6
    start << start[-1] + start[-2]
  end

  p start.select { |number| number.even? }.inject(:+)
end

